/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tawjihiPackage;

import java.awt.BorderLayout;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.*;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author HP
 */
public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    public frame() {
        initComponents();
        
       jScrollPane2.setVisible(false);
        
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Palestine");
        jComboBox1.addItem("Jerusalem");
        jComboBox1.addItem("Nablus");
        jComboBox1.addItem("Hebron");
        jComboBox1.addItem("Jenin");
         jComboBox1.addItem("Ramallah");
        jComboBox1.addItem("Tulkarm");
        jComboBox1.setSelectedIndex(0);
        
        urlCombo.removeAllItems();
        urlCombo.addItem("Servlet server");
        urlCombo.addItem("PHP server");
        urlCombo.addItem("JSP server");
        
        displayCombo.removeAllItems();
        displayCombo.addItem("Chart");
        displayCombo.addItem("Table");
        displayCombo.setSelectedIndex(0);
        
        dlt.setVisible(false);
        Average.setVisible(false);
        AVGLBL.setVisible(false);
        distributionLBL.setVisible(false);
        distribution.setVisible(false);
         
    
         jTable1.getTableHeader().setVisible(false);
                jTable1.setVisible(false);
                  jScrollPane2.setVisible(false);
   
   
 
  // pieChart chartPanelCustom = new pieChart();
     
   
   //  jPanel1.setVisible(true);
 //   jPanel1.add(chartPanelCustom);
   
       /*  pieChart demo = new pieChart("Pie Chart Demo 7");
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);*/
   // ChartPanel chartPanel1 = new ChartPanel(pieChart);
   
   
     /*!!!!!  PiePlot p=(PiePlot)pieChart.getPlot();
       this.add(pieChart);
     ChartFrame f =new ChartFrame("pie",pieChart);
     f.setVisible(true);
     f.setSize(450,500); !!!*/
     
     
        
       
    }
      
        // Create a ChartPanel and add it to the GUI
   /*  ChartPanel chartPanel = new ChartPanel(pieChart);
       chartPanel.setPreferredSize(new java.awt.Dimension(400, 300));
      //  jPanel1.setVisible(true);
    //    jPanel1.add(chartPanel);
    //    this.add(chartPanel);
    ///     pieChart chartPanelCustom = new pieChart();
 //   this.add(chartPanelCustom);
    }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Average = new javax.swing.JTextField();
        displayCombo = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        get = new javax.swing.JButton();
        post = new javax.swing.JButton();
        urlCombo = new javax.swing.JComboBox<>();
        URLtextf = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dlt = new javax.swing.JButton();
        distribution = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        topGrades = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        AVGLBL = new javax.swing.JLabel();
        distributionLBL = new javax.swing.JLabel();
        Signbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));
        setForeground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Average.setText("Average");
        jPanel1.add(Average, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 466, 136, 35));

        displayCombo.setBackground(new java.awt.Color(153, 153, 255));
        displayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayComboActionPerformed(evt);
            }
        });
        jPanel1.add(displayCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 105, 92, 25));

        jComboBox1.setBackground(new java.awt.Color(102, 102, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 48, 156, -1));

        get.setBackground(new java.awt.Color(255, 255, 255));
        get.setLabel("get");
        get.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getActionPerformed(evt);
            }
        });
        jPanel1.add(get, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 94, 69, 37));

        post.setBackground(new java.awt.Color(255, 255, 255));
        post.setText("Post");
        post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postActionPerformed(evt);
            }
        });
        jPanel1.add(post, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 94, 68, 37));

        urlCombo.setBackground(new java.awt.Color(153, 153, 255));
        urlCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(urlCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 138, 259, -1));

        URLtextf.setText("URL");
        jPanel1.add(URLtextf, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 109, 374, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Success Students", "Failed Students", "Average", "Distribution"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 192, 296, 170));

        dlt.setBackground(new java.awt.Color(255, 255, 255));
        dlt.setText("DeleteAll");
        dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dltActionPerformed(evt);
            }
        });
        jPanel1.add(dlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(881, 398, 93, -1));

        distribution.setText("distribution");
        jPanel1.add(distribution, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 466, 136, 32));

        topGrades.setColumns(20);
        topGrades.setRows(5);
        jScrollPane1.setViewportView(topGrades);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 192, 240, 170));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 178, 239, 217));

        AVGLBL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AVGLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AVGLBL.setText("Average");
        jPanel1.add(AVGLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 468, 92, 31));

        distributionLBL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        distributionLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        distributionLBL.setText("Distribution");
        jPanel1.add(distributionLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 467, 92, 31));

        Signbtn.setBackground(new java.awt.Color(255, 255, 255));
        Signbtn.setText("Sign In");
        Signbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignbtnActionPerformed(evt);
            }
        });
        jPanel1.add(Signbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(945, 466, 88, 56));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tawjihi Portal");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 13, 476, 74));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SignbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignbtnActionPerformed
        Sign f=new Sign();
        f.show();
        dispose();
    }//GEN-LAST:event_SignbtnActionPerformed

    private void dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dltActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0); // Clear all rows
    }//GEN-LAST:event_dltActionPerformed

    private void postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postActionPerformed
        sendData_POST();
    }//GEN-LAST:event_postActionPerformed

    private void getActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getActionPerformed
        sendData_GET();
    }//GEN-LAST:event_getActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void displayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayComboActionPerformed

    int x,y=0;
 ChartPanel piePanel;
    private void show1()
  {
  
   SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                createAndShowChart();
            }
        });
  }
private void  createAndShowChart()
{
    
 
     DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Success", x);
        dataset.setValue("Fail", y);
        

        // Create the pie chart using the dataset
        JFreeChart pieChart1 = ChartFactory.createPieChart(
                "Sample Pie Chart",  // Chart title
                dataset,             // Dataset
                true,                // Include legend
                true,                // Include tooltips
                false                // Include URLs
        );
PiePlot pie=(PiePlot) pieChart1.getPlot();
pie.setLabelGenerator(new StandardPieSectionLabelGenerator("{0} = {1}"));
    piePanel = new ChartPanel(pieChart1);
   piePanel.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel3.removeAll();
        jPanel3.add(piePanel, BorderLayout.CENTER);
        jPanel3.revalidate();
        jPanel3.repaint();
 
    }
    
 
 
    String dataStr = "";
 
    String contentStr = "application/x-www-form-urlencoded";

    public void addParameter(String ps, String vs) {
        if (ps == null || vs == null || ps.length() == 0 || vs.length() == 0) {
            return;
        }
        if (dataStr.length() > 0) {
            dataStr += "&";
        }
        try {
            dataStr += ps + "=" + URLEncoder.encode(vs, "ASCII");
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    void sendData_POST() {
        dataStr = "";
        OutputStream os;
        InputStream is;
       
       String city=jComboBox1.getSelectedItem().toString();
        addParameter("city", city); 
 
        String urlStr=null; ;
          
           if(urlCombo.getSelectedIndex()==0)
               urlStr="http://localhost:8084/servletProject0/tawjihi";
           else if(urlCombo.getSelectedIndex()==1)
                urlStr="http://localhost/Networks2HWS/PhpProject3/index.php";
           else if(urlCombo.getSelectedIndex()==2)
                urlStr="http://localhost:8084/servletProject0/tawjihiJ.jsp";
           
         //   "http://localhost:8084/hello/response4.jsp",
  /*    urlCombo.addItem("http://localhost/Networks2HWS/phpTawjihi/tawjihi.php");
  
        urlCombo.addItem("http://localhost:8084/servletProject0/tawjihi");
        urlCombo.addItem("http://localhost/Networks2HWS/PhpProject3/index.php");*/
                
        try {
            URL myURL = new URL(urlStr);
            URLConnection myConn = myURL.openConnection();
            myConn.setDoOutput(true);
            myConn.setDoInput(true);
            myConn.setRequestProperty("Content-Type", contentStr);
            myConn.setUseCaches(false);
            //dataStr = "T1=67&T2=88";
            this.URLtextf.setText("POST: sending to " + urlStr+" data:"+dataStr);
            BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
            out.write(dataStr.getBytes());//"ACTION=add&NUMPTS=2&DATA=L0001\nL0002");
            out.close();

            //out.close();
            String SS = "";
            int b = -1;

            String t = "";
            is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
               
                    SS = SS + (char) b;
                };
                SS=SS.strip();
              String  answer[]=SS.split(",");
              if(displayCombo.getSelectedIndex()==0)
              {      dlt.setVisible(false);
                    Average.setVisible(true);
                    distribution.setVisible(true);
                    AVGLBL.setVisible(true);
        distributionLBL.setVisible(true);
        
                   jPanel3.setVisible(true);
                   jTable1.getTableHeader().setVisible(false);
                  jTable1.setVisible(false);
                  jScrollPane2.setVisible(false);
                  x=Integer.parseInt(answer[0]);
                  y=Integer.parseInt(answer[1]);
                  show1();
                   this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
                    Average.setText(answer[11]);
                     float av=Float.parseFloat(answer[11]);
               if(av>=90)
                   distribution.setText("Excellent");
               else if(av>=80)
                   distribution.setText("Very Good");
                else if(av>=70)
                   distribution.setText(" Good");
                 else if(av>=60)
                   distribution.setText("Acceptable");
                 else if(av>=50)
                   distribution.setText("Bad");
                 else if(av>=0)
                   distribution.setText("Failed");
               
                    
              }//if
              else 
              {    dlt.setVisible(true);
                    Average.setVisible(false);
                    distribution.setVisible(false);
                    AVGLBL.setVisible(false);
                    distributionLBL.setVisible(false);
                  jPanel3.setVisible(false);
                  jTable1.setVisible(true);
                  jTable1.getTableHeader().setVisible(true);
                  jScrollPane2.setVisible(true);
                   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                   
                   this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
                   
                   String d=new String("");
               float av=Float.parseFloat(answer[11]);
               if(av>=90)
                 d="Excellent";
               else if(av>=80)
                   d="Very Good";
                else if(av>=70)
                   d=" Good";
                 else if(av>=60)
                   d="Acceptable";
                 else if(av>=50)
                   d="Bad";
                 else if(av>=0)
                   d="Failed";
              String [] s={answer[0],answer[1],answer[11],d};
            //  showTable();
                   model.addRow(s);
                 jTable1.repaint();
              }
          /*    success.setText(answer[0]);
              fail.setText(answer[1]);
               this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
               Average.setText(answer[11]);
               float av=Float.parseFloat(answer[11]);
               if(av>=90)
                   distribution.setText("Excellent");
               else if(av>=80)
                   distribution.setText("Very Good");
                else if(av>=70)
                   distribution.setText(" Good");
                 else if(av>=60)
                   distribution.setText("Acceptable");
                 else if(av>=50)
                   distribution.setText("Bad");
                 else if(av>=0)
                   distribution.setText("Failed");*/
               
            //  this.success.setText(SS);
           
            }
            // this.jTextField1.setText(SS);
            
         catch (Exception e) {
            System.out.println(e.toString());
            
        }

    }
    int kkk =1;
    void sendData_GET() {
        DataInputStream dis;
         String urlStr=null; ;
          
            if(urlCombo.getSelectedIndex()==0)
               urlStr="http://localhost:8084/servletProject0/tawjihi";
           else if(urlCombo.getSelectedIndex()==1)
                urlStr="http://localhost/Networks2HWS/PhpProject3/index.php";
           else if(urlCombo.getSelectedIndex()==2)
                urlStr="http://localhost:8084/servletProject0/tawjihiJ.jsp";
           
  /*    urlCombo.addItem("http://localhost/Networks2HWS/phpTawjihi/tawjihi.php");
  
        urlCombo.addItem("http://localhost:8084/servletProject0/tawjihi");
        urlCombo.addItem("http://localhost/Networks2HWS/PhpProject3/index.php");*/
        try {
          
            String str = urlStr+ "?city=" + jComboBox1.getSelectedItem().toString(); 
            URL u = new URL(str);
            this.URLtextf.setText("GET: sending to " + str);

            dis = new DataInputStream(u.openConnection().getInputStream());
           
            int b;
            String t = "";
            String SS = "";

            URLConnection myConn = u.openConnection();
            InputStream is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
              
                    SS = SS + (char) b;
               

            }
            SS=SS.strip();
        //  this.topGrades.setText(SS);
         String  answer[]=SS.split(",");
         
        
              if(displayCombo.getSelectedIndex()==0)
              {      dlt.setVisible(false);
                    Average.setVisible(true);
                    distribution.setVisible(true);
                    AVGLBL.setVisible(true);
        distributionLBL.setVisible(true);
        
                   jPanel3.setVisible(true);
                   jTable1.getTableHeader().setVisible(false);
                  jTable1.setVisible(false);
                  jScrollPane2.setVisible(false);
                  x=Integer.parseInt(answer[0]);
                  y=Integer.parseInt(answer[1]);
                  show1();
                   this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
                    Average.setText(answer[11]);
                     float av=Float.parseFloat(answer[11]);
               if(av>=90)
                   distribution.setText("Excellent");
               else if(av>=80)
                   distribution.setText("Very Good");
                else if(av>=70)
                   distribution.setText(" Good");
                 else if(av>=60)
                   distribution.setText("Acceptable");
                 else if(av>=50)
                   distribution.setText("Bad");
                 else if(av>=0)
                   distribution.setText("Failed");
               
                    
              }//if
              else 
              {    dlt.setVisible(true);
                    Average.setVisible(false);
                    distribution.setVisible(false);
                    AVGLBL.setVisible(false);
        distributionLBL.setVisible(false);
                  jPanel3.setVisible(false);
                  jTable1.setVisible(true);
                  jTable1.getTableHeader().setVisible(true);
                  jScrollPane2.setVisible(true);
                   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                   
                   this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
                   
                   String d=new String("");
               float av=Float.parseFloat(answer[11]);
               if(av>=90)
                 d="Excellent";
               else if(av>=80)
                   d="Very Good";
                else if(av>=70)
                   d=" Good";
                 else if(av>=60)
                   d="Acceptable";
                 else if(av>=50)
                   d="Bad";
                 else if(av>=0)
                   d="Failed";
              String [] s={answer[0],answer[1],answer[11],d};
            //  showTable();
                   model.addRow(s);
                 jTable1.repaint();
              }
              
           /*   success.setText(answer[0]);
              fail.setText(answer[1]);
               this.topGrades.setText("highest 3 grades (names / grade / city)"+"\n"+
                       answer[2]+"  "+answer[3]+"  "+answer[4]+"\n"+
               answer[5]+"  "+answer[6]+"  "+answer[7]+"\n"+
                       answer[8]+"  "+answer[9]+"  "+answer[10]
               );
               Average.setText(answer[11]);
                float av=Float.parseFloat(answer[11]);
               if(av>=90)
                   distribution.setText("Excellent");
               else if(av>=80)
                   distribution.setText("Very Good");
                else if(av>=70)
                   distribution.setText(" Good");
                 else if(av>=60)
                   distribution.setText("Acceptable");
                 else if(av>=50)
                   distribution.setText("Bad");
                 else if(av>=0)
                   distribution.setText("Failed");*/
           

        } catch (Exception e) {
            System.out.println(e.toString());
            this.topGrades.setText("Faild: exception");
        }

    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame().setVisible(true);
            }
        });
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AVGLBL;
    private javax.swing.JTextField Average;
    private javax.swing.JButton Signbtn;
    private javax.swing.JTextField URLtextf;
    private javax.swing.JComboBox<String> displayCombo;
    private javax.swing.JTextField distribution;
    private javax.swing.JLabel distributionLBL;
    private javax.swing.JButton dlt;
    private javax.swing.JButton get;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton post;
    private javax.swing.JTextArea topGrades;
    private javax.swing.JComboBox<String> urlCombo;
    // End of variables declaration//GEN-END:variables

    private void showTable() {
         SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                showTable2();
            }
        });
       // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    private void showTable2()
    {
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                  
                   
               /*    String d=new String("");
               float av=Float.parseFloat(answer[11]);
               if(av>=90)
                 d="Excellent";
               else if(av>=80)
                   d="Very Good";
                else if(av>=70)
                   d=" Good";
                 else if(av>=60)
                   d="Acceptable";
                 else if(av>=50)
                   d="Bad";
                 else if(av>=0)
                   d="Failed";*/
              String [] s={"f","a","c","s"};
             
                   model.addRow(s);
                 jTable1.repaint();
    }
}
